<?php

namespace Bitfumes\Blogg\Models;

use Bitfumes\Visits\Visits;
use Illuminate\Support\Str;
use Bitfumes\Blogg\Traits\ImageUpload;
use Bitfumes\Likker\Traits\CanBeLiked;
use Bitfumes\Likker\Contracts\Likeable;
use Illuminate\Database\Eloquent\Model;

class Blog extends Model implements Likeable
{
    use ImageUpload, CanBeLiked;

    protected $fillable = ['title', 'slug', 'body', 'published', 'image', 'user_id', 'category_id'];

    protected $casts = ['published' => 'boolean'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($blog) {
            self::setSlug($blog);
        });
        self::updating(function ($blog) {
            self::setSlug($blog);
        });

        self::deleted(function ($blog) {
            $blog->tags()->detach();
        });
    }

    public static function store($request)
    {
        $request['image']   = (new self())->uploadImage($request->image);
        $request['user_id'] = auth()->check() ? auth()->id() : (auth('admin')->check() ? auth('admin')->id() : 33);
        $blog               = Self::create($request->except('tag_ids'));
        $blog->tags()->sync(request('tag_ids'));
        return $blog;
    }

    public function updateAll($request)
    {
        $request['image'] = $this->removeAndUpload($request->image);
        $this->update($request->all());
        $this->tags()->sync(request('tag_ids'));
    }

    /**
     * @param $blog
     */
    public static function setSlug($blog)
    {
        $blog->slug = Str::slug($blog->title);
    }

    /**
     * @param $query
     * @return mixed
     */
    public function scopePublished($query)
    {
        return $query->where('published', true)->latest();
    }

    /**
     * @return string
     */
    public function getRouteKeyName()
    {
        return 'slug';
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function category()
    {
        return $this->belongsTo(config('blogg.models.category'));
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\MorphToMany
     */
    public function tags()
    {
        return $this->morphToMany(config('blogg.models.tag'), 'taggable');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function user()
    {
        return $this->belongsTo(config('blogg.models.user'));
    }

    /**
     * @return string
     */
    public function path()
    {
        return asset("api/blog/{$this->category->slug}/{$this->slug}");
    }

    public function visit($key = null)
    {
        return new Visits($this, $key);
    }
}
